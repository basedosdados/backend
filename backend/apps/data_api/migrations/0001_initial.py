# -*- coding: utf-8 -*-
# Generated by Django 4.2.19 on 2025-02-22 01:52

import uuid

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("v1", "0054_alter_organization_area"),
    ]

    operations = [
        migrations.CreateModel(
            name="Endpoint",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("slug", models.SlugField(max_length=100)),
                ("name", models.CharField(max_length=100)),
                ("name_pt", models.CharField(max_length=100, null=True)),
                ("name_en", models.CharField(max_length=100, null=True)),
                ("name_es", models.CharField(max_length=100, null=True)),
                ("description", models.TextField(blank=True)),
                ("description_pt", models.TextField(blank=True, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_es", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deprecated", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Endpoint",
                "verbose_name_plural": "Endpoints",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="Key",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="A friendly name to identify this key",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "hash",
                    models.CharField(
                        blank=True,
                        help_text="The hashed key",
                        max_length=64,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "prefix",
                    models.CharField(
                        blank=True,
                        help_text="First 8 characters of the key",
                        max_length=8,
                        null=True,
                        unique=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="The balance of the key in BRL",
                        max_digits=12,
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, help_text="Optional expiration date", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="keys",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Key",
                "verbose_name_plural": "Keys",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="Request",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("parameters", models.JSONField(default=dict)),
                ("error_message", models.TextField(blank=True)),
                ("response_time", models.FloatField(default=0)),
                ("bytes_processed", models.BigIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "endpoint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="requests",
                        to="data_api.endpoint",
                    ),
                ),
                (
                    "key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="requests",
                        to="data_api.key",
                    ),
                ),
            ],
            options={
                "verbose_name": "Request",
                "verbose_name_plural": "Requests",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="EndpointPricingTier",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                (
                    "min_requests",
                    models.PositiveIntegerField(
                        help_text="Minimum number of requests for this tier"
                    ),
                ),
                (
                    "max_requests",
                    models.PositiveIntegerField(
                        blank=True, help_text="Maximum number of requests for this tier", null=True
                    ),
                ),
                (
                    "price_per_request",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Price per request",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "currency",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"category__slug": "currency"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="endpoint_pricing_tiers",
                        to="v1.measurementunit",
                    ),
                ),
                (
                    "endpoint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pricing_tiers",
                        to="data_api.endpoint",
                    ),
                ),
            ],
            options={
                "verbose_name": "Endpoint Pricing Tier",
                "verbose_name_plural": "Endpoint Pricing Tiers",
                "ordering": ["min_requests"],
            },
        ),
        migrations.CreateModel(
            name="EndpointParameter",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("name_pt", models.CharField(max_length=100, null=True)),
                ("name_en", models.CharField(max_length=100, null=True)),
                ("name_es", models.CharField(max_length=100, null=True)),
                ("description", models.TextField(blank=True)),
                ("description_pt", models.TextField(blank=True, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_es", models.TextField(blank=True, null=True)),
                ("is_required", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "column",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="parameters",
                        to="v1.column",
                    ),
                ),
                (
                    "endpoint",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="parameters",
                        to="data_api.endpoint",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="parameters",
                        to="v1.bigquerytype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Endpoint Parameter",
                "verbose_name_plural": "Endpoint Parameters",
            },
        ),
        migrations.CreateModel(
            name="EndpointCategory",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ("slug", models.SlugField(max_length=100)),
                ("name", models.CharField(max_length=100)),
                ("name_pt", models.CharField(max_length=100, null=True)),
                ("name_en", models.CharField(max_length=100, null=True)),
                ("name_es", models.CharField(max_length=100, null=True)),
                ("description", models.TextField(blank=True)),
                ("description_pt", models.TextField(blank=True, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_es", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "dataset",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="endpoint_categories",
                        to="v1.dataset",
                    ),
                ),
            ],
            options={
                "verbose_name": "Endpoint Category",
                "verbose_name_plural": "Endpoint Categories",
                "ordering": ["created_at"],
            },
        ),
        migrations.AddField(
            model_name="endpoint",
            name="category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="endpoints",
                to="data_api.endpointcategory",
            ),
        ),
        migrations.AddField(
            model_name="endpoint",
            name="table",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="endpoints",
                to="v1.table",
            ),
        ),
        migrations.CreateModel(
            name="Credit",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[
                            django.core.validators.MinValueValidator(
                                0.01, message="Amount must be greater than zero"
                            )
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "currency",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"category__slug": "currency"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="credits",
                        to="v1.measurementunit",
                    ),
                ),
                (
                    "key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="credits",
                        to="data_api.key",
                    ),
                ),
            ],
            options={
                "verbose_name": "Credit",
                "verbose_name_plural": "Credits",
                "ordering": ["created_at"],
            },
        ),
        migrations.AddConstraint(
            model_name="endpointpricingtier",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("max_requests__gt", models.F("min_requests")),
                    ("max_requests__isnull", True),
                    _connector="OR",
                ),
                name="max_requests_greater_than_min",
            ),
        ),
    ]
