services:
  index:
    image: elasticsearch:8.17.2
    container_name: index
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes: [esdata:/usr/share/elasticsearch/data]
    ports: [9200:9200, 9300:9300]
    healthcheck:
      test: [CMD-SHELL, curl -s http://localhost:9200 >/dev/null || exit 1]
      interval: 1m
      timeout: 20s
      retries: 5
      start_period: 1m
  queue:
    image: redis:6.0
    container_name: queue
    ports: [6379:6379]
    healthcheck:
      test: [CMD, redis-cli, ping]
      interval: 10s
      timeout: 5s
      retries: 3
  database:
    image: postgres:14
    container_name: database
    environment: [POSTGRES_USER=postgres, POSTGRES_HOST_AUTH_METHOD=trust]
    env_file: [.env.docker]
    ports: [5432:5432]
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: [CMD, pg_isready, -U, postgres]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 1m
    restart: unless-stopped
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    env_file: [.env.docker]
    volumes:
    - .:/app
    ports:
      - "8000:8000"  # Porta da api
      - "5678:5678"  # Porta de debug
    command: ["/app/start-dev.sh"] # override for dev
    depends_on:
      index:
        condition: service_healthy
      queue:
        condition: service_healthy
      database:
        condition: service_healthy
    healthcheck:
      test: [CMD, curl, -f, http://localhost/healthcheck/]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: unless-stopped
volumes:
  esdata:
  pgdata:
