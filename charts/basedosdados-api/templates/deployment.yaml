apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.api.name }}
  labels:
    app.kubernetes.io/component: basedosdados-api
    app.kubernetes.io/name: {{ .Values.api.name }}
  annotations:
    rollme: {{ randAlphaNum 5 | quote }}
spec:
  replicas: {{ .Values.api.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: basedosdados-api
      app.kubernetes.io/name: {{ .Values.api.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: basedosdados-api
        app.kubernetes.io/name: {{ .Values.api.name }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      containers:
        - name: basedosdados-api
          image: "{{ .Values.api.image.name }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          volumeMounts:
            - mountPath: /var/secrets/
              name: gcp-sa
              readOnly: true
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: DB_HOST
              value: {{ .Values.database.host | quote }}
            - name: DB_PORT
              value: {{ .Values.database.port | quote }}
            - name: DB_NAME
              value: {{ .Values.database.name | quote }}
            - name: DB_USER
              value: {{ .Values.database.user | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.passwordSecret | quote }}
                  key: password
            - name: BILLING_PROJECT_ID
              value: {{ .Values.api.chatbot.billing_project_id | quote }}
            - name: QUERY_PROJECT_ID
              value: {{ .Values.api.chatbot.query_project_id | quote }}
            - name: MODEL_URI
              value: {{ .Values.api.chatbot.model_uri | quote }}
            - name: LANGCHAIN_TRACING_V2
              value: {{ .Values.api.chatbot.langchain_tracing_v2 | quote }}
            - name: DJANGO_SETTINGS_MODULE
              value: {{ .Values.api.settingsModule | quote }}
            {{- with .Values.api.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.api.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.api.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /healthcheck/
              port: http
            initialDelaySeconds: 30
            periodSeconds: 90
            timeoutSeconds: 5
            failureThreshold: 5
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /healthcheck/
              port: http
            initialDelaySeconds: 30
            periodSeconds: 90
            timeoutSeconds: 5
            failureThreshold: 5
            successThreshold: 1
      volumes:
        - name: gcp-sa
          secret:
            secretName: api-{{ .Values.environment }}-secrets
            items:
              - key: GCP_SA
                path: gcp-sa.json
