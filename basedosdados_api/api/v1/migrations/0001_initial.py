# -*- coding: utf-8 -*-
# Generated by Django 4.1.3 on 2023-02-02 21:22

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AnalysisType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
                ("tag", models.CharField(max_length=255)),
                ("tag_pt", models.CharField(max_length=255, null=True)),
                ("tag_en", models.CharField(max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Analysis Type",
                "verbose_name_plural": "Analysis Types",
                "db_table": "analysis_type",
                "ordering": ["name_pt"],
            },
        ),
        migrations.CreateModel(
            name="Area",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
            ],
            options={
                "verbose_name": "Area",
                "verbose_name_plural": "Areas",
                "db_table": "area",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="Availability",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Availability",
                "verbose_name_plural": "Availabilities",
                "db_table": "availability",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="BigQueryTypes",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "verbose_name": "BigQuery Type",
                "verbose_name_plural": "BigQuery Types",
                "db_table": "bigquery_types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Column",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
                ("is_in_staging", models.BooleanField(default=True)),
                ("is_partition", models.BooleanField(default=False)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "covered_by_dictionary",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "measurement_unit",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "contains_sensitive_data",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("observations", models.TextField(blank=True, null=True)),
                (
                    "bigquery_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="columns",
                        to="v1.bigquerytypes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Column",
                "verbose_name_plural": "Columns",
                "db_table": "column",
                "ordering": ["name_pt"],
            },
        ),
        migrations.CreateModel(
            name="Coverage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("temporal_coverage", models.CharField(max_length=255)),
                (
                    "area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coverages",
                        to="v1.area",
                    ),
                ),
            ],
            options={
                "verbose_name": "Coverage",
                "verbose_name_plural": "Coverages",
                "db_table": "coverage",
                "ordering": ["temporal_coverage"],
            },
        ),
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Dataset",
                "verbose_name_plural": "Datasets",
                "db_table": "dataset",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="DirectoryPrimaryKey",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
            ],
            options={
                "verbose_name": "Directory Primary Key",
                "verbose_name_plural": "Directory Primary Keys",
                "db_table": "directory_primary_key",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="Entity",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Entity",
                "verbose_name_plural": "Entities",
                "db_table": "entity",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="InformationRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("observations", models.TextField(blank=True, null=True)),
                ("raw_data_url", models.URLField(blank=True, null=True)),
                ("auxiliary_files_url", models.URLField(blank=True, null=True)),
                ("architecture_url", models.URLField(blank=True, null=True)),
                (
                    "coverages",
                    models.ManyToManyField(
                        related_name="information_requests", to="v1.coverage"
                    ),
                ),
                (
                    "dataset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="information_requests",
                        to="v1.dataset",
                    ),
                ),
            ],
            options={
                "verbose_name": "Information Request",
                "verbose_name_plural": "Information Requests",
                "db_table": "information_request",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Language",
                "verbose_name_plural": "Languages",
                "db_table": "language",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="License",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
                ("url", models.URLField()),
            ],
            options={
                "verbose_name": "License",
                "verbose_name_plural": "Licenses",
                "db_table": "license",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="Status",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Status",
                "verbose_name_plural": "Statuses",
                "db_table": "status",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "db_table": "tag",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="Theme",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
                ("logo_url", models.URLField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Theme",
                "verbose_name_plural": "Themes",
                "db_table": "theme",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="TimeUnit",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
            ],
            options={
                "verbose_name": "Time Unit",
                "verbose_name_plural": "Time Units",
                "db_table": "time_unit",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="UpdateFrequency",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("number", models.IntegerField()),
                (
                    "time_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="update_frequencies",
                        to="v1.timeunit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Update Frequency",
                "verbose_name_plural": "Update Frequencies",
                "db_table": "update_frequency",
                "ordering": ["number"],
            },
        ),
        migrations.CreateModel(
            name="Table",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "is_directory",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("data_cleaning_description", models.TextField(blank=True, null=True)),
                ("data_cleaning_code_url", models.URLField(blank=True, null=True)),
                ("raw_data_url", models.URLField(blank=True, null=True)),
                ("auxiliary_files_url", models.URLField(blank=True, null=True)),
                ("architecture_url", models.URLField(blank=True, null=True)),
                (
                    "source_bucket_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "uncompressed_file_size",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("compressed_file_size", models.BigIntegerField(blank=True, null=True)),
                ("number_rows", models.BigIntegerField(blank=True, null=True)),
                ("number_columns", models.BigIntegerField(blank=True, null=True)),
                (
                    "coverages",
                    models.ManyToManyField(related_name="tables", to="v1.coverage"),
                ),
                (
                    "dataset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tables",
                        to="v1.dataset",
                    ),
                ),
                (
                    "license",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tables",
                        to="v1.license",
                    ),
                ),
                (
                    "update_frequency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tables",
                        to="v1.updatefrequency",
                    ),
                ),
            ],
            options={
                "verbose_name": "Table",
                "verbose_name_plural": "Tables",
                "db_table": "table",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="RawDataSource",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("raw_data_url", models.URLField(blank=True, null=True)),
                ("auxiliary_files_url", models.URLField(blank=True, null=True)),
                ("architecture_url", models.URLField(blank=True, null=True)),
                (
                    "area_ip_address_required",
                    models.ManyToManyField(
                        blank=True, related_name="raw_data_sources", to="v1.area"
                    ),
                ),
                (
                    "availability",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="raw_data_sources",
                        to="v1.availability",
                    ),
                ),
                (
                    "coverages",
                    models.ManyToManyField(
                        related_name="raw_data_sources", to="v1.coverage"
                    ),
                ),
                (
                    "dataset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="raw_data_sources",
                        to="v1.dataset",
                    ),
                ),
                (
                    "languages",
                    models.ManyToManyField(
                        blank=True, related_name="raw_data_sources", to="v1.language"
                    ),
                ),
                (
                    "license",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="raw_data_sources",
                        to="v1.license",
                    ),
                ),
                (
                    "update_frequency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="raw_data_sources",
                        to="v1.updatefrequency",
                    ),
                ),
            ],
            options={
                "verbose_name": "Raw Data Source",
                "verbose_name_plural": "Raw Data Sources",
                "db_table": "raw_data_source",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("name_pt", models.CharField(max_length=255, null=True)),
                ("name_en", models.CharField(max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("website", models.URLField(blank=True, null=True)),
                ("twitter", models.URLField(blank=True, null=True)),
                ("facebook", models.URLField(blank=True, null=True)),
                ("linkedin", models.URLField(blank=True, null=True)),
                ("instagram", models.URLField(blank=True, null=True)),
                (
                    "area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organizations",
                        to="v1.area",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization",
                "verbose_name_plural": "Organizations",
                "db_table": "organization",
                "ordering": ["slug"],
            },
        ),
        migrations.CreateModel(
            name="ObservationLevel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="observation_levels",
                        to="v1.entity",
                    ),
                ),
                (
                    "information_requests",
                    models.ManyToManyField(
                        related_name="entity_columns", to="v1.informationrequest"
                    ),
                ),
                (
                    "raw_data_sources",
                    models.ManyToManyField(
                        related_name="entity_columns", to="v1.rawdatasource"
                    ),
                ),
                (
                    "tables",
                    models.ManyToManyField(
                        related_name="entity_columns", to="v1.table"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Key",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("value", models.CharField(max_length=255)),
                (
                    "coverages",
                    models.ManyToManyField(related_name="keys", to="v1.coverage"),
                ),
            ],
        ),
        migrations.AddField(
            model_name="informationrequest",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="information_requests",
                to="v1.status",
            ),
        ),
        migrations.AddField(
            model_name="informationrequest",
            name="update_frequency",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="information_requests",
                to="v1.updatefrequency",
            ),
        ),
        migrations.CreateModel(
            name="EntityColumn",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "column",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entity_columns",
                        to="v1.column",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entity_columns",
                        to="v1.entity",
                    ),
                ),
                (
                    "observation_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entity_columns",
                        to="v1.observationlevel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Dictionary",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "column",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dictionary",
                        to="v1.column",
                    ),
                ),
                (
                    "keys",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dictionaries",
                        to="v1.key",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="dataset",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="datasets",
                to="v1.organization",
            ),
        ),
        migrations.AddField(
            model_name="dataset",
            name="tags",
            field=models.ManyToManyField(related_name="datasets", to="v1.tag"),
        ),
        migrations.AddField(
            model_name="dataset",
            name="themes",
            field=models.ManyToManyField(related_name="datasets", to="v1.theme"),
        ),
        migrations.AddField(
            model_name="column",
            name="coverages",
            field=models.ManyToManyField(related_name="columns", to="v1.coverage"),
        ),
        migrations.AddField(
            model_name="column",
            name="directory_primary_key",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="columns",
                to="v1.directoryprimarykey",
            ),
        ),
        migrations.AddField(
            model_name="column",
            name="table",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="columns",
                to="v1.table",
            ),
        ),
        migrations.CreateModel(
            name="CloudTable",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("gcp_project_id", models.CharField(max_length=255)),
                ("gcp_dataset_id", models.CharField(max_length=255)),
                ("gcp_table_id", models.CharField(max_length=255)),
                (
                    "columns",
                    models.ManyToManyField(related_name="cloud_tables", to="v1.column"),
                ),
                (
                    "table",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cloud_tables",
                        to="v1.table",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cloud Table",
                "verbose_name_plural": "Cloud Tables",
                "db_table": "cloud_table",
                "ordering": ["id"],
            },
        ),
    ]
