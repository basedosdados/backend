# Generated by Django 4.1.7 on 2023-03-11 06:10

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="RegistrationToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "token",
                    models.CharField(default=uuid.uuid4, max_length=255, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("used_at", models.DateTimeField(auto_now=True)),
                ("active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Registration Token",
                "verbose_name_plural": "Registration Tokens",
            },
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=40, unique=True, verbose_name="Username"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(blank=True, max_length=40, verbose_name="Nome"),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=40, verbose_name="Sobrenome"
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Nascimento"
                    ),
                ),
                (
                    "picture",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profile_pictures",
                        verbose_name="Imagem",
                    ),
                ),
                (
                    "twitter",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Twitter"
                    ),
                ),
                (
                    "linkedin",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Linkedin"
                    ),
                ),
                (
                    "github",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Github"
                    ),
                ),
                (
                    "website",
                    models.URLField(blank=True, null=True, verbose_name="Website"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                (
                    "description_pt",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                (
                    "description_es",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                (
                    "is_admin",
                    models.BooleanField(
                        default=False,
                        help_text="Indica se tem acesso à administração",
                        verbose_name="Membro da equipe",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indica se o usuário está ativo",
                        verbose_name="Ativo",
                    ),
                ),
                (
                    "profile",
                    models.IntegerField(
                        choices=[(1, "Staff"), (2, "Visitante"), (3, "Colaborador")],
                        default=2,
                        verbose_name="Perfil",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "account",
                "verbose_name_plural": "accounts",
                "db_table": "account",
                "ordering": ["first_name", "last_name"],
            },
        ),
    ]
